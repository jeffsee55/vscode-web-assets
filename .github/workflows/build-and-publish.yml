name: Build and Publish VSCode Web

on:
  workflow_dispatch:
    inputs:
      version:
        description: "VSCode version to build (leave empty for latest)"
        required: false
        type: string
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Get latest VSCode version
        id: vscode-version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "Using provided version: ${{ github.event.inputs.version }}"
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "Fetching latest VSCode version from GitHub API..."
            LATEST_VERSION=$(curl -s https://api.github.com/repos/microsoft/vscode/releases/latest | jq -r '.tag_name')
            echo "Latest version: $LATEST_VERSION"
            echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Update package.json version
        run: |
          VERSION="${{ steps.vscode-version.outputs.version }}"
          pnpm version $VERSION --no-git-tag-version
          echo "Updated package.json to version $VERSION"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build VSCode Web
        env:
          VSCODE_VERSION: ${{ steps.vscode-version.outputs.version }}
        run: |
          echo "Building VSCode Web version $VSCODE_VERSION"
          pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vscode-web-dist
          path: dist/
          retention-days: 30

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: vscode-web-dist
          path: dist/

      - name: Get VSCode version
        id: vscode-version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            LATEST_VERSION=$(curl -s https://api.github.com/repos/microsoft/vscode/releases/latest | jq -r '.tag_name')
            echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Update package.json version
        run: |
          VERSION="${{ steps.vscode-version.outputs.version }}"
          pnpm version $VERSION --no-git-tag-version

      - name: Publish to npm
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
